# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - packages

pool:
  vmImage: ubuntu-latest

variables: 
  NODE_VERSION: '14.17.1'
  PNPM_CACHE_FOLDER: common/temp/pnpm-store
  CHROMIUM_BUILD_FOLDER: packages/chromium-extension/dist

stages:
- stage: Build
  jobs:
  - job: BuildLint
    displayName: Build and Lint all projects
    steps:
    - task: NodeTool@0
      displayName: 'Use Node $(NODE_VERSION)'
      inputs:
        versionSpec: '$(NODE_VERSION)'
    - task: Cache@2
      displayName: Cache PNPM store
      inputs:
        key: '"pnpm" | "$(Agent.OS)" | common/config/rush/pnpm-lock.yaml'
        restoreKeys: |
          pnpm | "$(Agent.OS)"
        path: $(PNPM_CACHE_FOLDER)
    - script: 'node common/scripts/install-run-rush.js change --verify'
      displayName: 'Verify Change Logs'
    - script: 'node common/scripts/install-run-rush.js install'
      displayName: 'Rush Install'
    - script: 'node common/scripts/install-run-rush.js rebuild --verbose'
      env:
        NODE_OPTIONS: --max_old_space_size=16384
      displayName: 'Rush Rebuild'
    - script: 'node common/scripts/install-run-rush.js lint'
      displayName: 'Rush Lint'
    - script: |
        sudo apt install -qq -y moreutils 
        jq '.name = "DataGalaxy_staging"' ${CHROMIUM_BUILD_FOLDER}/manifest.json | sponge ${CHROMIUM_BUILD_FOLDER}/manifest.json
      displayName: "Rename extension for staging"
    - script: 'zip -r chromium-extension.zip packages/chromium-extension/dist'
      displayName: 'Zip Chromium extension'
    - script: |
        ACCESS_TOKEN=$(curl "https://accounts.google.com/o/oauth2/token" -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&refresh_token=${REFRESH_TOKEN}&grant_type=refresh_token&redirect_uri=urn:ietf:wg:oauth:2.0:oob" | jq -r .access_token)
        curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -X PUT -T chromium-extension.zip -v "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${APP_ID}"
        curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -H "Content-Length: 0" -X POST -v "https://www.googleapis.com/chromewebstore/v1.1/items/${APP_ID}/publish"
      displayName: Publish Chromium extension to the store
